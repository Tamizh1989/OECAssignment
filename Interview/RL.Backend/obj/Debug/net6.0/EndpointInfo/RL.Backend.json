{
  "openapi": "3.0.1",
  "info": {
    "title": "RL.Backend",
    "version": "1.0"
  },
  "paths": {
    "/api/AssignUserToPlanProcedure": {
      "get": {
        "tags": [
          "AssignUserToPlanProcedure"
        ],
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of records.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to skip.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "A function that must evaluate to true for a record to be returned.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return. Use a comma separated list.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of records.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Use to add related query data.",
            "schema": {
              "type": "String"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedUser"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignUserToPlanProcedure/update": {
      "post": {
        "tags": [
          "AssignUserToPlanProcedure"
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsersInPlanProcedureCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Plan": {
      "get": {
        "tags": [
          "Plan"
        ],
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of records.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to skip.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "A function that must evaluate to true for a record to be returned.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return. Use a comma separated list.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of records.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Use to add related query data.",
            "schema": {
              "type": "String"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Plan"
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Plan/AddProcedureToPlan": {
      "post": {
        "tags": [
          "Plan"
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddProcedureToPlanCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/PlanProcedure": {
      "get": {
        "tags": [
          "PlanProcedure"
        ],
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of records.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to skip.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "A function that must evaluate to true for a record to be returned.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return. Use a comma separated list.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of records.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Use to add related query data.",
            "schema": {
              "type": "String"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlanProcedure"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Procedures": {
      "get": {
        "tags": [
          "Procedures"
        ],
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of records.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to skip.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "A function that must evaluate to true for a record to be returned.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return. Use a comma separated list.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of records.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Use to add related query data.",
            "schema": {
              "type": "String"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RemoveProcedureFromPlan": {
      "post": {
        "tags": [
          "RemoveProcedureFromPlan"
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProcedureFromPlanCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of records.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of records to skip.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "A function that must evaluate to true for a record to be returned.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return. Use a comma separated list.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of records.",
            "schema": {
              "type": "String"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Use to add related query data.",
            "schema": {
              "type": "String"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddProcedureToPlanCommand": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssignedUser": {
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "planId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "assignedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          },
          "planProcedure": {
            "$ref": "#/components/schemas/PlanProcedure"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "CreatePlanCommand": {
        "type": "object",
        "additionalProperties": false
      },
      "Plan": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "integer",
            "format": "int32"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          },
          "planProcedures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanProcedure"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlanProcedure": {
        "type": "object",
        "properties": {
          "procedureId": {
            "type": "integer",
            "format": "int32"
          },
          "planId": {
            "type": "integer",
            "format": "int32"
          },
          "procedure": {
            "$ref": "#/components/schemas/Procedure"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Procedure": {
        "type": "object",
        "properties": {
          "procedureId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureTitle": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RemoveProcedureFromPlanCommand": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateUsersInPlanProcedureCommand": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureId": {
            "type": "integer",
            "format": "int32"
          },
          "usersToAdd": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "usersToRemove": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    }
  }
}